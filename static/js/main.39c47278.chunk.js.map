{"version":3,"sources":["layout/nav-menu.jsx","layout/index.jsx","redux/actions/index.js","components/todo/Link.js","redux/containers/FilterLink.js","components/todo/Footer.js","redux/containers/AddTodo.js","components/todo/Todo.js","components/todo/TodoList.js","redux/containers/VisibleTodoList.js","components/topics/counter.jsx","components/topics/topic.jsx","routes/routes.js","components/home/index.jsx","components/about/index.jsx","components/topics/index.jsx","components/todo/AppTodo.js","routes/index.jsx","App.jsx","serviceWorker.js","redux/reducers/todos.js","redux/reducers/visibilityFilter.js","redux/reducers/counter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["NavMenu","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","className","props","menu","map","item","id","NavLink","exact","activeClassName","to","href","label","React","Layout","nav_menu_NavMenu","children","nextTodoId","VisibilityFilters","actionCreators","increment","type","decrement","Link","_ref","active","onClick","react_default","a","createElement","disabled","style","marginLeft","connect","state","ownProps","filter","visibilityFilter","dispatch","Footer","FilterLink","input","onSubmit","e","text","preventDefault","trim","ref","node","Todo","completed","textDecoration","TodoList","todos","toggleTodo","todo","todo_Todo","assign","t","Error","getVisibleTodos","Counter","_this","count","counter","CounterStore","components","props-v-state","Topic","match","params","routes","component","Topics","call","find","path","_this2","concat","url","Route","Component","containers_AddTodo","VisibleTodoList","todo_Footer","ApplicationRoutes","layout_Layout","App","_Component","react_hot_loader","BrowserRouter","basename","routes_ApplicationRoutes","Boolean","window","location","hostname","length","undefined","action","toConsumableArray","objectSpread","combineReducers","createStore","rootReducer","rootElement","document","getElementById","ReactDOM","render","es","store","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iQAGaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEQ,OAAOC,EAAA,qBAAKC,UAAU,aAClBD,EAAA,qBAAKC,UAAU,6BACVV,KAAKW,MAAMC,MAAQZ,KAAKW,MAAMC,KAAKC,IAAI,SAACC,GAAD,OACpCL,EAAA,oBAAIF,IAAKO,EAAKC,GAAIL,UAAU,YACxBD,EAAA,cAACO,EAAA,EAAD,CAASC,MAAOH,EAAKG,MAAOC,gBAAgB,SAASR,UAAU,WAAWS,GAAIL,EAAKM,MAAON,EAAKO,gBANvHzB,EAAA,CAA6B0B,aCAhBC,EAAb,SAAA1B,GAAA,SAAA0B,IAAA,OAAAzB,OAAAC,EAAA,EAAAD,CAAAE,KAAAuB,GAAAzB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyB,GAAApB,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAyB,EAAA1B,GAAAC,OAAAQ,EAAA,EAAAR,CAAAyB,EAAA,EAAAhB,IAAA,SAAAC,MAAA,WAEQ,OAAOC,EAAA,qBAAKC,UAAU,mBAClBD,EAAA,qBAAKC,UAAU,OACXD,EAAA,qBAAKC,UAAU,SACXD,EAAA,cAACe,EAAD,CAASZ,KAAMZ,KAAKW,MAAMC,QAE9BH,EAAA,qBAAKC,UAAU,UACVV,KAAKW,MAAMc,gBARhCF,EAAA,CAA4BD,oBCHxBI,EAAa,EAiBJC,EACD,WADCA,EAEK,iBAFLA,EAGE,cAMFC,EAAiB,CAC5BC,UAAW,iBAAO,CAAEC,KAHS,oBAI7BC,UAAW,iBAAO,CAAED,KAHS,qBCJhBE,EAlBF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQT,EAAXQ,EAAWR,SAAUU,EAArBF,EAAqBE,QAArB,OACTC,EAAAC,EAAAC,cAAA,UACGH,QAASA,EACTI,SAAUL,EACVM,MAAO,CACHC,WAAY,QAGhBhB,ICCQiB,cARS,SAACC,EAAOC,GAAR,MAAsB,CAC5CV,OAAQU,EAASC,SAAWF,EAAMG,mBAGT,SAACC,EAAUH,GAAX,MAAyB,CAClDT,QAAS,kBAAMY,EFF6B,CAC5CjB,KAAM,wBACNe,OEA4CD,EAASC,YAGxCH,CAGbV,GCIagB,EAfA,kBACbZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACW,EAAD,CAAYJ,OAAQlB,GAApB,OAGAS,EAAAC,EAAAC,cAACW,EAAD,CAAYJ,OAAQlB,GAApB,UAGAS,EAAAC,EAAAC,cAACW,EAAD,CAAYJ,OAAQlB,GAApB,eCaWe,gBAtBC,SAAAT,GAAkB,IAC5BiB,EADaH,EAAed,EAAfc,SAGjB,OACEX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMa,SAAU,SAAAC,GJRC,IAAAC,EISfD,EAAEE,iBACGJ,EAAM1C,MAAM+C,SAGjBR,GJbeM,EIaEH,EAAM1C,MJbC,CAC9BsB,KAAM,WACNf,GAAIW,IACJ2B,UIWMH,EAAM1C,MAAQ,MAEd4B,EAAAC,EAAAC,cAAA,SAAOkB,IAAK,SAAAC,GAAI,OAAIP,EAAQO,KAC5BrB,EAAAC,EAAAC,cAAA,UAAQR,KAAK,UAAb,gBCEO4B,EAjBF,SAAAzB,GAAA,IAAGE,EAAHF,EAAGE,QAASwB,EAAZ1B,EAAY0B,UAAWN,EAAvBpB,EAAuBoB,KAAvB,OACXjB,EAAAC,EAAAC,cAAA,MACEH,QAASA,EACTK,MAAO,CACLoB,eAAgBD,EAAY,eAAiB,SAG9CN,ICeUQ,EArBE,SAAA5B,GAAA,IAAG6B,EAAH7B,EAAG6B,MAAOC,EAAV9B,EAAU8B,WAAV,OACf3B,EAAAC,EAAAC,cAAA,UACGwB,EAAMjD,IAAI,SAAAmD,GAAI,OACb5B,EAAAC,EAAAC,cAAC2B,EAADnE,OAAAoE,OAAA,CACE3D,IAAKyD,EAAKjD,IACNiD,EAFN,CAGE7B,QAAS,kBAAM4B,EAAWC,EAAKjD,YCexB2B,cARS,SAAAC,GAAK,MAAK,CAChCmB,MAdsB,SAACA,EAAOjB,GAC9B,OAAQA,GACN,KAAKlB,EACH,OAAOmC,EACT,KAAKnC,EACH,OAAOmC,EAAMjB,OAAO,SAAAsB,GAAC,OAAIA,EAAER,YAC7B,KAAKhC,EACH,OAAOmC,EAAMjB,OAAO,SAAAsB,GAAC,OAAKA,EAAER,YAC9B,QACE,MAAM,IAAIS,MAAM,mBAAqBvB,IAKlCwB,CAAgB1B,EAAMmB,MAAOnB,EAAMG,oBAGjB,SAAAC,GAAQ,MAAK,CACtCgB,WAAY,SAAAhD,GAAE,OAAIgC,EPVM,SAAAhC,GAAE,MAAK,CAC/Be,KAAM,cACNf,MOQ2BgD,CAAWhD,OAGzB2B,CAGbmB,GCvBIS,mLACO,IAAAC,EAAAvE,KACL,OAAOS,EAAA,yBACHA,EAAA,mCAEAA,EAAA,yEAEAA,EAAA,yCAAkBA,EAAA,4BAAST,KAAKW,MAAM6D,QAEtC/D,EAAA,wBAAQ0B,QAAS,WAAQoC,EAAK5D,MAAMkB,cAApC,qBATUP,aAePoB,cACX,SAACC,GAAD,OAAWA,EAAM8B,SACjBC,EAFWhC,CAGb4B,GChBW1D,EAAO,CAChB+D,WAAcvC,EAAAC,EAAAC,cAHQ,kBAAMF,EAAAC,EAAAC,cAAA,0CAGd,MACdsC,gBAAiBxC,EAAAC,EAAAC,cAHM,kBAAMF,EAAAC,EAAAC,cAAA,8CAGZ,MACjBmC,QAAWrC,EAAAC,EAAAC,cAACmC,EAAD,OAGFI,EAAQ,SAAA5C,GAAe,IAAZ6C,EAAY7C,EAAZ6C,MACpB,OAAIA,GAASA,EAAMC,QAAUD,EAAMC,OAAOhE,GAC/BH,EAAKkE,EAAMC,OAAOhE,IAEtBqB,EAAAC,EAAAC,cAAA,qCCZE0C,EAAS,CAAC,CACfjE,GAAI,EACJK,KAAM,IACNC,MAAO,OACPJ,OAAO,EACPgE,UCTY,kBAAM7C,EAAAC,EAAAC,cAAA,oBDUnB,CACCvB,GAAI,EACJK,KAAM,SACNC,MAAO,QACPJ,OAAO,EACPgE,UEfa,kBAAM7C,EAAAC,EAAAC,cAAA,qBFgBpB,CACCvB,GAAI,EACJK,KAAM,UACNC,MAAO,SACPJ,OAAO,EACPgE,UGjBR,SAAApF,GACI,SAAAqF,EAAYvE,GAAO,IAAA4D,EAAA,OAAAzE,OAAAC,EAAA,EAAAD,CAAAE,KAAAkF,IACfX,EAAAzE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoF,GAAAC,KAAAnF,KAAMW,KACDC,KAAOoE,EAAOI,KAAK,SAACtE,GAAD,OAAUA,EAAKM,OAASmD,EAAK5D,MAAMmE,MAAMO,OAFlDd,EADvB,OAAAzE,OAAAO,EAAA,EAAAP,CAAAoF,EAAArF,GAAAC,OAAAQ,EAAA,EAAAR,CAAAoF,EAAA,EAAA3E,IAAA,SAAAC,MAAA,WAKa,IAAA8E,EAAAtF,KACL,OAAOoC,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,oBACCtC,KAAKY,MAAQZ,KAAKY,KAAKa,UACpBW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAI5B,UAAU,iBACTV,KAAKY,KAAKa,SAASZ,IAAI,SAACC,GAAD,OACpBsB,EAAAC,EAAAC,cAAA,MAAI/B,IAAKO,EAAKC,GAAIL,UAAU,YACxB0B,EAAAC,EAAAC,cAACtB,EAAA,EAAD,CAASN,UAAU,WAAWS,GAAE,GAAAoE,OAAKD,EAAK3E,MAAMmE,MAAMU,IAAM1E,EAAKM,OAASN,EAAKO,WAI3Fe,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOJ,KAAI,GAAAE,OAAKvF,KAAKW,MAAMmE,MAAMO,KAAtB,SAAmCJ,UAAWJ,UAjB7EK,EAAA,CAA4B5D,IAAMoE,WHkB1BjE,SAAU,CAAC,CACPV,GAAI,EACJK,KAAM,cACNC,MAAO,aACPJ,OAAO,GACR,CACCF,GAAI,EACJK,KAAM,iBACNC,MAAO,iBACPJ,OAAO,GACR,CACCF,GAAI,EACJK,KAAM,WACNC,MAAO,UACPJ,OAAO,KAGf,CACIF,GAAI,EACJK,KAAM,YACNC,MAAO,YACPJ,OAAO,EACPgE,UIxCe,kBACrB7C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqD,EAAD,MACAvD,EAAAC,EAAAC,cAACsD,EAAD,MACAxD,EAAAC,EAAAC,cAACuD,EAAD,UCFSC,EAAb,SAAAjG,GACI,SAAAiG,IAAc,IAAAvB,EAAA,OAAAzE,OAAAC,EAAA,EAAAD,CAAAE,KAAA8F,IACVvB,EAAAzE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgG,GAAAX,KAAAnF,QACKY,KAAOoE,EAFFT,EADlB,OAAAzE,OAAAO,EAAA,EAAAP,CAAAgG,EAAAjG,GAAAC,OAAAQ,EAAA,EAAAR,CAAAgG,EAAA,EAAAvF,IAAA,SAAAC,MAAA,WAOQ,OAAO4B,EAAAC,EAAAC,cAACyD,EAAD,CAAQnF,KAAMZ,KAAKY,MACrBZ,KAAKY,MAAQZ,KAAKY,KAAKC,IAAI,SAACC,GAAD,OACxBsB,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOxE,MAAOH,EAAKG,MAAOV,IAAKO,EAAKC,GAAIsE,KAAMvE,EAAKM,KAAM6D,UAAWnE,EAAKmE,mBATzFa,EAAA,CAAuCxE,IAAMoE,WCFhCM,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAlG,OAAAC,EAAA,EAAAD,CAAAE,KAAAgG,GAAAlG,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkG,GAAA7F,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAkG,EAAAC,GAAAnG,OAAAQ,EAAA,EAAAR,CAAAkG,EAAA,EAAAzF,IAAA,SAAAC,MAAA,WAGI,OACE4B,EAAAC,EAAAC,cAAC4D,EAAA,aAAD,KACE9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAeC,SAAU,KACvBhE,EAAAC,EAAAC,cAAC+D,EAAD,YANVL,EAAA,CAAyBN,aCOLY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3B,MACvB,uFCIShB,EAtBD,WAAwB,IAAvBnB,EAAuBvC,UAAAsG,OAAA,QAAAC,IAAAvG,UAAA,GAAAA,UAAA,GAAf,GAAIwG,EAAWxG,UAAAsG,OAAA,EAAAtG,UAAA,QAAAuG,EACpC,OAAQC,EAAO9E,MACb,IAAK,WACH,OAAOhC,OAAA+G,EAAA,EAAA/G,CACF6C,GADL4C,OAAA,CAEE,CACExE,GAAI6F,EAAO7F,GACXsC,KAAMuD,EAAOvD,KACbM,WAAW,KAGjB,IAAK,cACH,OAAOhB,EAAM9B,IAAI,SAAAmD,GAAI,OAClBA,EAAKjD,KAAO6F,EAAO7F,GAApBjB,OAAAgH,EAAA,EAAAhH,CAAA,GACQkE,EADR,CACcL,WAAYK,EAAKL,YAC3BK,IAER,QACE,OAAOrB,ICPEG,EATU,WAAgD,IAA/CH,EAA+CvC,UAAAsG,OAAA,QAAAC,IAAAvG,UAAA,GAAAA,UAAA,GAAvCuB,EAA4BiF,EAAWxG,UAAAsG,OAAA,EAAAtG,UAAA,QAAAuG,EACvE,OAAQC,EAAO9E,MACb,IAAK,wBACH,OAAO8E,EAAO/D,OAChB,QACE,OAAOF,ICQE8B,EAfC,SAAC9B,EAAOiE,GACpB,OAAQA,EAAO9E,MACX,IAAK,kBACD,MAAO,CAAE0C,MAAO7B,EAAM6B,MAAQ,GAClC,IAAK,kBACD,MAAO,CAAGA,MAAO7B,EAAM6B,MAAQ,GAQvC,OAAO7B,GAAS,CAAC6B,MAAO,ICRbuC,cAAgB,CAC7BjD,QACAhB,mBACA2B,YCLauC,cAAYC,GCMrBC,SAAcC,SAASC,eAAe,SAC5CC,IAASC,OACPlF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAUC,MAAOA,GACfpF,EAAAC,EAAAC,cAACmF,EAAD,OAEFP,GNmHI,kBAAmBQ,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.39c47278.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport class NavMenu extends React.Component {\r\n    render() {\r\n        return <div className=\"container\">\r\n            <div className='nav flex-column nav-pills'>\r\n                {this.props.menu && this.props.menu.map((item) =>\r\n                    <li key={item.id} className='nav-item'>\r\n                        <NavLink exact={item.exact} activeClassName='active' className='nav-link' to={item.href}>{item.label}</NavLink >\r\n                    </li>\r\n                )}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport { NavMenu } from './nav-menu';\r\n\r\nexport class Layout extends React.Component {\r\n    render() {\r\n        return <div className='container-fluid'>\r\n            <div className='row'>\r\n                <div className='col-2'>\r\n                    <NavMenu menu={this.props.menu} />\r\n                </div>\r\n                <div className='col-10'>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n","let nextTodoId = 0\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  id: nextTodoId++,\r\n  text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\n\r\nexport const INCREMENT_COUNT = 'INCREMENT_COUNT';\r\nexport const DECREMENT_COUNT = 'DECREMENT_COUNT';\r\nexport const actionCreators = {\r\n  increment: () => ({ type: INCREMENT_COUNT}),\r\n  decrement: () => ({ type: DECREMENT_COUNT})\r\n};\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n    <button\r\n       onClick={onClick}\r\n       disabled={active}\r\n       style={{\r\n           marginLeft: '4px',\r\n       }}\r\n    >\r\n      {children}\r\n    </button>\r\n)\r\n\r\nLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link\r\n","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../../redux/actions'\r\nimport Link from '../../components/todo/Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Link)\r\n","import React from 'react'\r\nimport FilterLink from '../../redux/containers/FilterLink'\r\nimport { VisibilityFilters } from '../../redux/actions'\r\n\r\nconst Footer = () => (\r\n  <div>\r\n    <span>Show: </span>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>\r\n      All\r\n    </FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\r\n      Active\r\n    </FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\r\n      Completed\r\n    </FilterLink>\r\n  </div>\r\n)\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../../redux/actions'\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  let input\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        if (!input.value.trim()) {\r\n          return\r\n        }\r\n        dispatch(addTodo(input.value))\r\n        input.value = ''\r\n      }}>\r\n        <input ref={node => input = node} />\r\n        <button type=\"submit\">\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(AddTodo)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n  <li\r\n    onClick={onClick}\r\n    style={{\r\n      textDecoration: completed ? 'line-through' : 'none'\r\n    }}\r\n  >\r\n    {text}\r\n  </li>\r\n)\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => (\r\n  <ul>\r\n    {todos.map(todo =>\r\n      <Todo\r\n        key={todo.id}\r\n        {...todo}\r\n        onClick={() => toggleTodo(todo.id)}\r\n      />\r\n    )}\r\n  </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n  }).isRequired).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList\r\n","import { connect } from 'react-redux'\r\nimport TodoList from '../../components/todo/TodoList'\r\nimport { VisibilityFilters ,toggleTodo} from '../../redux/actions'\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter(t => t.completed)\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter(t => !t.completed)\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as CounterStore from '../../redux/actions';\r\n\r\n\r\nclass Counter extends React.Component {\r\n    render() {\r\n        return <div>\r\n            <h1>Counter</h1>\r\n\r\n            <p>This is a simple example of a React component.</p>\r\n\r\n            <p>Current count: <strong>{this.props.count}</strong></p>\r\n\r\n            <button onClick={() => { this.props.increment() }}>Increment</button>\r\n        </div>;\r\n    }\r\n}\r\n\r\n// Wire up the React component to the Redux store\r\nexport default connect(\r\n    (state) => state.counter, // Selects which state properties are merged into the component's props\r\n    CounterStore.actionCreators                 // Selects which action creators are merged into the component's props\r\n)(Counter);","import React from \"react\";\r\nimport Counter from './counter'\r\n\r\n\r\n\r\nexport const Components = () => <h3>Requested Param: Components</h3>;\r\nexport const PropsVState = () => <h3>Requested Param: Props v. State</h3>;\r\nexport const menu = {\r\n    'components': <Components />,\r\n    'props-v-state': <PropsVState />,\r\n    'counter': <Counter />\r\n\r\n}\r\nexport const Topic = ({ match }) => {\r\n    if (match && match.params && match.params.id) {\r\n        return menu[match.params.id]\r\n    }\r\n    return <h3>Please select a topic.</h3>;\r\n};","import { TodoApp } from \"../components/todo/AppTodo\";\r\nimport { Topics } from \"../components/topics/index\";\r\nimport { Home } from \"../components/home\";\r\nimport { About } from \"../components/about\";\r\n\r\nexport const routes = [{\r\n        id: 0,\r\n        href: '/',\r\n        label: 'Home',\r\n        exact: true,\r\n        component: Home\r\n    }, {\r\n        id: 1,\r\n        href: '/about',\r\n        label: 'About',\r\n        exact: false,\r\n        component: About\r\n    }, {\r\n        id: 2,\r\n        href: '/topics',\r\n        label: 'Topics',\r\n        exact: false,\r\n        component: Topics,\r\n        children: [{\r\n            id: 0,\r\n            href: '/components',\r\n            label: 'Components',\r\n            exact: true\r\n        }, {\r\n            id: 1,\r\n            href: '/props-v-state',\r\n            label: 'Props v. State',\r\n            exact: true\r\n        }, {\r\n            id: 2,\r\n            href: '/counter',\r\n            label: 'Counter',\r\n            exact: true\r\n        }]\r\n    },\r\n    {\r\n        id: 3,\r\n        href: '/todolist',\r\n        label: 'Todo List',\r\n        exact: false,\r\n        component: TodoApp\r\n    }\r\n]","import React from \"react\";\r\nexport const Home = () => <h2>Home</h2>;","import React from \"react\";\r\nexport const About = () => <h2>About</h2>;","import React from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport { Topic } from './topic';\r\nimport { routes } from '../../routes/routes';\r\n\r\nexport class Topics extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.menu = routes.find((item) => item.href === this.props.match.path);\r\n    }\r\n    render() {\r\n        return <div>\r\n            <h2>Topics</h2>\r\n            {this.menu && this.menu.children &&\r\n                <div>\r\n                    <ul className='nav nav-pills'>\r\n                        {this.menu.children.map((item) =>\r\n                            <li key={item.id} className='nav-item'>\r\n                                <NavLink className='nav-link' to={`${this.props.match.url + item.href}`}>{item.label}</NavLink>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                    <Route path={`${this.props.match.path}/:id?`} component={Topic} />\r\n                </div>}\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Footer from './Footer'\r\nimport AddTodo from '../../redux/containers/AddTodo'\r\nimport VisibleTodoList from '../../redux/containers/VisibleTodoList'\r\n\r\nexport const TodoApp = () => (\r\n  <div>\r\n    <AddTodo />\r\n    <VisibleTodoList />\r\n    <Footer />\r\n  </div>\r\n)","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Layout } from '../layout/index';\r\nimport { routes } from \"./routes\";\r\n\r\nexport const Home = () => <h2>Home</h2>;\r\n\r\nexport class ApplicationRoutes extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.menu = routes;\r\n    }\r\n\r\n    render() {\r\n        return <Layout menu={this.menu}>\r\n            {this.menu && this.menu.map((item) =>\r\n                <Route exact={item.exact} key={item.id} path={item.href} component={item.component} />\r\n            )}\r\n        </Layout >\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { AppContainer } from 'react-hot-loader';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ApplicationRoutes } from './routes/index';\r\n\r\nexport class App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <AppContainer>\r\n        <BrowserRouter basename={'/'} >\r\n          <ApplicationRoutes/>\r\n        </BrowserRouter>\r\n      </AppContainer>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n    case 'TOGGLE_TODO':\r\n      return state.map(todo =>\r\n        (todo.id === action.id)\r\n          ? {...todo, completed: !todo.completed}\r\n          : todo\r\n      )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos\r\n","import { VisibilityFilters } from '../actions/index'\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter\r\n","const counter = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INCREMENT_COUNT':\r\n            return { count: state.count + 1 };\r\n        case 'DECREMENT_COUNT':\r\n            return {  count: state.count - 1 };\r\n        default:\r\n            // The following line guarantees that every action in the KnownAction union has been covered by a case above\r\n            const exhaustiveCheck = action;\r\n    }\r\n\r\n    // For unrecognized actions (or in cases where actions have no effect), must return the existing state\r\n    //  (or default initial state if none was supplied)\r\n    return state || {count: 0};\r\n};\r\nexport default counter;","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\nimport counter from './counter'\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter,\r\n  counter\r\n})\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from './App';\r\nimport * as serviceWorker from './serviceWorker'; \r\nimport { Provider } from \"react-redux\";\r\nimport store from './redux/store';\r\nimport './index.css';\r\n\r\n \r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}